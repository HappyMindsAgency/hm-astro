---
import RichText from '../components/core/RichText.astro';
import LinkPulsante from '../components/core/LinkPulsante.astro';
const { pd, landingID } = Astro.props;
import { Image } from "astro:assets";
import fetchApi from '../lib/strapi';

// Define the interface for the pageData objectsContent[{ 
interface Progetto {
    id: number;
    titolo: string;
    sottotitolo: string;
    descrizione: string;
    immagine: any[];
    ctaFormat: any[];
};

interface Content {
    titolo: string;
    descrizione: string;
    progetti: Progetto[];
};

interface Format {
    content?: Content[];
};

interface ImageData {
    url: string;
    alternativeText: string;
    width: number;
    height: number;
};

/**
 * esempio link chiamata API
 * http://localhost:1337/api/landing-pages/yd9u9u9k5wtvej3e8sv0uf3h?populate[content][on][shared.slider-clienti][populate]=cliente.logo&populate[content][on][shared.slider-clienti][populate]=cliente.link
 */
const format = await fetchApi({
	endpoint: `landing-pages/${landingID}`, 
	page: '', 
	wrappedByKey: 'data',
    query: {}, 
    wrappedByList: false, 
    locale: '', 

    // popolare con il nome del contenitore dinamico solo nel caso si voglia popolare un componente al suo interno a un livello dal secondo in poi
    secondLevel: 'content', 
    secondLevelQuery: '[on][shared.format]', 
    secondLevelTarget: ['progetti.immagine', 'progetti.ctaProgetto'], 
});

const logoUrl = import.meta.env.STRAPI_URL;

// Fix: Access the data correctly based on the actual structure
const formatContent = format.content?.[0] || { titolo: '', descrizione: '', progetti: [] };
const content = {
    titolo: formatContent.titolo || '',
    descrizione: formatContent.descrizione || '',
};
const progetti = formatContent.progetti || [];

//console.log(format);
---

<section id="format" class="py-5">
    <div class="container">
        <div class="row d-lg-flex justify-content-lg-center pb-5">
            <div class="col col-lg-9 text-center">
                {content.titolo && <h1 class="fw-bold text-uppercase">{content.titolo}</h1>}
                {content.descrizione && <RichText block={content.descrizione} />}
            </div>
        </div>

        <div class="row d-flex justify-content-center">

            {progetti.length > 0 && progetti.map((counter: Progetto, index: number) => (
                <div class="col-11 col-lg-4" id={`progetto-${index+1}`}>
                    <div class="img-container w-100 pb-4 pb-lg-2">
                        {counter.immagine && counter.immagine.length > 0 && counter.immagine.map((img: ImageData, imgIndex: number) => (
                        <Image 
                            src={logoUrl+img.url} 
                            class="img-fluid rounded-4" 
                            alt={img.alternativeText ? img.alternativeText : ""} 
                            width={img.width} 
                            height={img.height} 
                        />
                        ))}
                    </div>
                    <div class="content-container w-100 pb-5 mx-1">
                        {counter.titolo && <h3 class="fw-bold lh-1 text-uppercase">{counter.titolo}</h3>}
                        {counter.sottotitolo && <p class="fs-small fw-bold text-primary">{counter.sottotitolo}</p>}
                        {counter.descrizione && <RichText block={counter.descrizione} />}

                        {counter.ctaFormat && counter.ctaFormat.length > 0 && 
                            <LinkPulsante param={counter.ctaFormat} />
                        }

                    </div>
                </div>
            ))}

        </div>

        <div class="row d-flex justify-content-center">

            <div class="col-11 col-lg-4 text-center pt-5">

                {pd.ctaFormat && 
                    <LinkPulsante param={pd.ctaFormat} />
                }

            </div>

        </div>
    </div>


</section>