---
const { pd, landingID } = Astro.props;
import RichText from '../components/core/RichText.astro';

---

<section id="contattaci" class="py-5">
    <div class="container col-11 m-auto">
        <div class="row d-lg-flex justify-content-lg-center pb-5">
            <div class="col-12 col-lg-9 text-center">
                {pd.titolo !== null && <h1 class="fw-bold text-uppercase">{pd.titolo}</h1>}
                {pd.descrizione !== null && <RichText block={pd.descrizione} />}
            </div>
        </div>

        <form class="row g-3 needs-validation" id="form-leads" novalidate>
            <div class="col-12 col-lg-6">
                <label for="nome" class="form-label">Nome <sup class="text-primary fw-bold">*</sup></label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Inserisci qui il tuo nome" id="nome" name="nome" required>
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci correttamente i dati</div>
            </div>
            <div class="col-12 col-lg-6">
                <label for="cognome" class="form-label">Cognome <sup class="text-primary fw-bold">*</sup></label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Scrivi qui il tuo cognome" id="cognome" name="cognome" required>
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci correttamente i dati</div>
            </div>

            <div class="col-12">
                <label for="azienda" class="form-label">Azienda, ente, istituzione o associazione <sup class="text-primary fw-bold">*</sup></label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Azienda, ente, istituzione, associazione, case, libri, auto, fogli di giornale..." name="azienda" id="azienda" required>
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci correttamente i dati</div>
            </div>

            <div class="col-12 col-lg-6">
                <label for="email" class="form-label">Indirizzo mail <sup class="text-primary fw-bold">*</sup></label>
                <input type="email" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Inserisci qui un tuo contatto mail" id="email" name="email" required />
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci un indirizzo email corretto!</div>
            </div>

            <div class="col-12 col-lg-6">
                <label for="telefono" class="form-label">Telefono</label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Un contatto telefonico" aria-label="Telefono" name="telefono">
            </div> 
            
            <div class="col-12">
                <label for="servizi" class="form-label">Quali servizi ti interessano? <sup class="text-primary fw-bold">*</sup></label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Hai presente le cose belle qui sopra?" name="servizi" id="servizi" required/>
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci correttamente i dati</div>
            </div>

            <div class="col-12">
                <label for="format" class="form-label">Quali format vorresti portare nel tuo territorio? <sup class="text-primary fw-bold">*</sup></label>
                <input type="text" class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Una Ciclomangia io, te e Felix?" name="format" id="format" required/>
                <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Inserisci correttamente i dati</div>
            </div>

            <div class="col-12">
                <label for="messaggio" class="form-label">Messaggio</label>
                <textarea class="form-control rounded rounded-3 border-black border-opacity-25" placeholder="Lasciaci un messaggio" aria-label="Lasciaci un messaggio" name="messaggio"></textarea>
            </div>

            <div class="col-12">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" class="rounded rounded-3 border-black border-opacity-25" value="true" id="flexCheckNewsletter" name="newsletter"/>
                    <label class="form-check-label" for="flexCheckNewsletter">
                        Sì, voglio iscrivermi la newsletter
                    </label>
                </div>
                
            </div>

            <div class="col-12">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" class="rounded rounded-3 border-black border-opacity-25" value="true" id="flexCheckDefault" name="privacy" required/>
                    <label class="form-check-label" for="flexCheckDefault">
                        Acconsento al trattamento dei dati personali come definito all'interno delle <a href="https://happyminds.it/privacy-policy/" target="_blank" title="Pricavy Policy Happy Minds">privacy policy</a>
                    </label>
                    <div class="valid-feedback">Ok!</div><div class="invalid-feedback">Devi accettare la privacy policy</div>
                </div>
                
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary rounded rounded-2 text-uppercase fw-bold px-5 pulsante-contattaci">Invia</button>
            </div>

            <div class="alert alert-success rounded rounded-1 text-center py-5 d-none" role="alert" id="alert-success">
                Grazie per averci contattato! Ti risponderemo al più presto.
            </div>
        </form>
    </div>
</section>


<script is:inline>
    (() => {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    const forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.from(forms).forEach(form => {
        form.addEventListener('submit', async event => {
        if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
        } else {
            // Send the form data to the server
            console.log('Form is valid! Send the request to the server...')
            event.preventDefault() 
            event.stopPropagation()
            const formData = new FormData(form)
            const data = Object.fromEntries(formData.entries())

            console.log(data)

            await fetch('https://script.google.com/macros/s/AKfycbzO_8Y4r5Qj1AF4wwGuQ-1ji004P7QV8SKsxC7xYDXEdzL8_rX-IxmMd0XxdRfKUNNClg/exec', {
                method: 'POST',
                mode: 'no-cors',
                headers: {
                    'Content-Type': 'application/json',
                    'Connection': 'keep-alive',
                    'Accept-Encoding': 'gzip, deflate, br',
                },
                body: JSON.stringify(data)
            })
            .then(response => { console.log("Response -> ",response);/*  return response.json();  */});            

                document.getElementById("alert-success").classList.remove("d-none");
                form.reset();
                setTimeout(() => {
                    document.getElementById("alert-success").classList.add("d-none");
                }, 5000);        

                let emailData = {
                    email: data.email,
                    subject: "Grazie per averci contattato!",
                    text: "Ti risponderemo al più presto."
                }

                console.log("Email Data ->", emailData);
                console.log(JSON.stringify(emailData));
    
            try {
                const emailResponse = await fetch('/api/send-mail', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(emailData)
                });

                const emailResult = await emailResponse.json();
    
                console.log("Email Result ->", emailResult);
    
    
            } catch (error) {
                console.error("Errore nell'invio della mail", error);
            }    

            
        }

        form.classList.add('was-validated')
        }, false)
    })
    })()
</script>
