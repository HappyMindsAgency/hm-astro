---
import LinkPulsante from '../components/core/LinkPulsante.astro';
const { pd, landingID } = Astro.props;
import fetchApi from '../lib/strapi';
import { Image } from "astro:assets";

// Define the interface for the pageData objectsContent[{ 
interface Cliente {
    id: number;
    nome: string;
    logo: {
        id: number;
        documentId: string;
        name: string;
        alternativeText: string;
        caption: string;
        width: number;
        height: number;
        formats: {
            thumbnail: {
                url: string;
                width: number;
                height: number;
            }
        };
        url: string;
        hash: string;
        ext: string;
        mime: string;
        size: number;
        previewUrl: string;
        provider: string;
        provider_metadata: string;
        createdAt: string;
        updatedAt: string;
        publishedAt: string;
    };
    link: {
        id: number;
        testoLink: string;
        link: string;
        title: string;
        class: string;
        targetBlank: boolean;
    };
}

interface Content {
    id: number;
    cliente: Cliente[];
};

interface ClienteData {
    content: Content[];
};

/**
 * esempio link chiamata API
 * http://localhost:1337/api/landing-pages/yd9u9u9k5wtvej3e8sv0uf3h?populate[content][on][shared.slider-clienti][populate]=cliente.logo&populate[content][on][shared.slider-clienti][populate]=cliente.link
 */
const clienteData = await fetchApi({

    // sostituire ID statico con ID dinamico passato con props in caso di più landing pages
	endpoint: `landing-pages/${landingID}`, 

    //lasciare vuoto se si cerca un ID particolare (es. landing-pages/yd9u9u9k5wtvej3e8sv0uf3h)
	page: '', 

	wrappedByKey: 'data',

    // Provide an empty object or appropriate query parameters
    query: {}, 

    // Provide a default value
    wrappedByList: false, 

    // Provide a default locale
    locale: '', 

    /**
     * USARE I TRE PARAMETRI SEGUENTI SOLO NEL CASO SPECIFICO DI POPOLAMENTO DI SECONDO LIVELLO E DI ID SPECIFICI
     * es. /api/landing-pages/yd9u9u9k5wtvej3e8sv0uf3h?populate[content][on][shared.slider-clienti][populate]=cliente.logo
     * es. /api/landing-pages/yd9u9u9k5wtvej3e8sv0uf3h?populate[content][on][shared.slider-clienti][populate]=cliente.link
     *              ^                     ^                         ^                   ^                         ^
     *              |                     |                         |                   |                         |
     *           endpoint           ID specifico        nome blocco dinamico     nome componente        nome sottocomponente
     */
    // popolare con il nome del contenitore dinamico solo nel caso si voglia popolare un componente al suo interno a un livello dal secondo in poi
    secondLevel: 'content', 

    // inserire la stringa che va a specificare quale componente popolare all'interno del blocco dinamico principale
    secondLevelQuery: '[on][shared.slider-clienti]', 

    // inserire il campo che si vuole popolare, creare array nel caso se ne vogliano popolare più di uno, lasciare una stringa semplice in caso contrario
    secondLevelTarget: ['cliente.logo', 'cliente.link'], 
});

let clienti = clienteData.content || [];

const logoUrl = import.meta.env.STRAPI_URL;

//console.log(clienteData.content[0]);
---
<script type="module">
    import Swiper from 'https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.mjs'
    
    
    const swiper = new Swiper('.clientiSwiper', {
        slidesPerView: 1, 
        spaceBetween: 52, 
        loop: true,
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
        pagination: {
            el: '.swiper-pagination',
            type: 'bullets',
            clickable: true,
        },
        autoplay: {
            delay: 2000,
            disableOnInteraction: false,
        },

        breakpoints: {
            640: {
                slidesPerView: 1,
                spaceBetween: 52,
            },
            768: {
                slidesPerView: 4,
                spaceBetween: 52,
            },
            1024: {
                slidesPerView: 6,
                spaceBetween: 52,
            },
        }
    });    
</script>

<section id="slider-clienti">
    <div class="container-fluid">
        <div class="row d-flex justify-content-center">
            <div class="col-12 py-5 px-5">
                <div class="swiper clientiSwiper pb-5">
                    <div class="swiper-wrapper">

                        {clienti !== null && clienti.map((content: Content) => (
                            content.id !== null && content.id === pd.id && content.cliente !== null && content.cliente.map((cliente: Cliente, index: number) => (
                                <div class="swiper-slide" id={`swiper-slide logo-${index+1}`}>

                                    {cliente.link !== null ? (
                                        <a 
                                            href={cliente.link.link ? cliente.link.link : ''} 
                                            class={cliente.link.class ? cliente.link.class : ''} 
                                            title={cliente.link.title ? cliente.link.title : ''} 
                                            target={cliente.link.targetBlank ? '_blank' : ''}
                                        >
                                        {cliente.logo !== null && 
                                            <Image 
                                                src={logoUrl+cliente.logo.url} 
                                                class="img-fluid rounded-4" 
                                                alt={cliente.logo.alternativeText ? cliente.logo.alternativeText : ""} 
                                                width={cliente.logo.width} 
                                                height={cliente.logo.height} 
                                            />
                                        }
                                        </a>
                                    ) : (
                                        cliente.logo !== null && 
                                        <Image 
                                            src={logoUrl+cliente.logo.url} 
                                            class="img-fluid rounded-4" 
                                            alt={cliente.logo.alternativeText} 
                                            width={cliente.logo.width} 
                                            height={cliente.logo.height} 
                                        />
                                    )}
                                </div>
                            ))
                        ))}
                    </div>

                    <div class="swiper-pagination"></div>

                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        </div>
    </div>
</section>